plugins {
    alias(libs.plugins.android.application)
}

android {
    namespace 'com.example.moum'
    compileSdk 34

    signingConfigs {
        release {
            storeFile file("keystore/MOUMkey2.jks")
            storePassword System.getenv("KEYSTORE_PASSWORD")
            keyAlias System.getenv("KEY_ALIAS")
            keyPassword System.getenv("KEY_PASSWORD")
        }
    }

    defaultConfig {
        applicationId "com.example.moum"
        minSdk 24
        targetSdk 34
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            // debug 빌드 타입에 testCoverageEnabled 추가
            testCoverageEnabled true
        }
    }

    buildFeatures{
        viewBinding true
        dataBinding true
    }

    // 추가
    testOptions {
        //안드로이드 리소스 사용가능 + 메소드 미호출시 기본값 반환
        unitTests.includeAndroidResources = true
        unitTests.returnDefaultValues = true

        unitTests.all {
            jacoco {
                includeNoLocationClasses = true
                destinationFile = layout.buildDirectory.file("jacoco/testDebugUnitTest.exec").get().asFile
                excludes = ['jdk.internal.*']
            }
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    packagingOptions {
        resources.excludes.add("META-INF/*")
    }

    dataBinding {
        enabled true
    }
}

// 테스트 후에 JaCoCo 리포트를 생성
tasks.register("jacocoTestReport", JacocoReport) {
    dependsOn(tasks.named("testDebugUnitTest"))

    reports {
        xml.required.set(true)
        //xml.outputLocation.set(layout.buildDirectory.file("jacoco/index.xml"))

        csv.required.set(false)

        html.required.set(true)
        //html.outputLocation.set(layout.buildDirectory.dir("jacoco/html"))
    }

    // 커버리지 제외 파일
    def fileFilter = ['**/dto/**',
                      '**/event/**',
                      '**/*InitData*',
                      '**/*Application*',
                      '**/exception/**',
                      '**/service/alarm/**',
                      '**/aop/**',
                      '**/config/**',
                      '**/MemberRole*']

    sourceDirectories.setFrom(files([layout.projectDirectory.dir("src/main/java").asFile]))
    classDirectories.setFrom(fileTree(dir: layout.buildDirectory.dir("intermediates/javac/debug").get().asFile, excludes: fileFilter))
    executionData.setFrom(fileTree(dir: layout.buildDirectory.dir("jacoco").get().asFile, includes: ['testDebugUnitTest.exec']))
}

dependencies {
    implementation libs.appcompat
    implementation libs.material
    implementation libs.activity
    implementation libs.constraintlayout
    testImplementation libs.junit
    testImplementation 'org.mockito:mockito-junit-jupiter:5.2.0'
    testImplementation 'android.arch.core:core-testing:1.0.0-alpha3'
    androidTestImplementation libs.ext.junit
    androidTestImplementation libs.espresso.core

    implementation 'com.github.bumptech.glide:glide:4.15.1' // Glide 의존성 추가
    annotationProcessor 'com.github.bumptech.glide:compiler:4.15.1' // Glide 컴파일러 의존성 추가

    // Retrofit2
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    implementation 'com.squareup.retrofit2:converter-scalars:2.9.0'

    // Gson
    implementation 'com.google.code.gson:gson:2.10.1'

    // Okhttp
    implementation 'com.squareup.okhttp3:okhttp:4.9.3'
    implementation 'com.squareup.okhttp3:okhttp-sse:4.9.3'
    implementation 'com.squareup.okhttp3:logging-interceptor:4.8.0'
    implementation "com.squareup.okhttp3:okhttp-urlconnection:4.9.1"
    implementation 'com.github.heremaps:oksse:0.9.0'

    // Glide for image processing
    implementation 'com.github.bumptech.glide:glide:4.12.0'
    androidTestImplementation libs.junit.jupiter
    annotationProcessor 'com.github.bumptech.glide:compiler:4.12.0'
    implementation 'de.hdodenhof:circleimageview:3.1.0'

    // Mockito and related libraries for androidTest
    androidTestImplementation 'org.mockito:mockito-core:3.12.4'
    androidTestImplementation 'org.mockito:mockito-android:3.12.4'
    androidTestImplementation 'androidx.test:core:1.4.0'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.arch.core:core-testing:2.1.0'
    androidTestImplementation 'com.squareup.okhttp3:mockwebserver:4.9.3'

    // Bottom navigation
    implementation 'androidx.navigation:navigation-fragment:2.8.2'
    implementation 'androidx.navigation:navigation-ui:2.8.2'
    implementation 'com.google.android.material:material:1.12.0'
    implementation "androidx.viewpager2:viewpager2:1.1.0"

    // RxJava & RxAndroid
    implementation 'io.reactivex.rxjava3:rxjava:3.1.5'
    implementation 'io.reactivex.rxjava3:rxandroid:3.0.2'

    // Material
    implementation 'com.google.android.material:material:1.1.0'

    // Circle Indicator
    implementation 'me.relex:circleindicator:2.1.6'

    // youtube player view
    implementation 'com.pierfrancescosoffritti.androidyoutubeplayer:core:12.1.1'

    // naver map
    implementation 'com.naver.maps:map-sdk:3.19.1'

    // Flexbox layout
    implementation 'com.google.android.flexbox:flexbox:3.0.0'

    // Swipe refresh layout
    implementation "androidx.swiperefreshlayout:swiperefreshlayout:1.1.0"
}
